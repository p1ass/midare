name: Deploy

on:
  push:
    branches:
      - master
    paths-ignore:
    - 'frontend/**'
    - 'ogp_functions/**'

env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  IMAGE: asia.gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.SERVICE_NAME }}:${{ github.sha }}

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v1

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          access_token_lifetime: '900s'

      - name: Set up Cloud SDK 
        uses: google-github-actions/setup-gcloud@v0

      - name: Configure docker to use the gcloud cli
        run: |
          gcloud config set project ${GCP_PROJECT}
          gcloud config set run/platform managed
          gcloud config set run/region ${GCP_REGION}
          gcloud auth configure-docker --quiet

      - name: Build a docker image
        run: cd backend && docker build . -t $IMAGE

      - name: Push the docker image
        run: cd backend && docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
            cd backend && gcloud run deploy ${{ secrets.SERVICE_NAME }} \
            --image $IMAGE \
            --concurrency 40 \
            --cpu 1 \
            --max-instances 10 \
            --memory 512Mi \
            --set-env-vars `cat .env.prod | tr '\n' ','`REDIS_ADDR=${{ secrets.REDIS_ADDR }},REDIS_PASS=${{ secrets.REDIS_PASS }},TWITTER_CONSUMER_KEY=${{ secrets.TWITTER_CONSUMER_KEY }},TWITTER_CONSUMER_SECRET=${{ secrets.TWITTER_CONSUMER_SECRET }},CLOUD_FUNCTIONS_URL=${{ secrets.CLOUD_FUNCTIONS_URL }},SESSION_KEY=${{ secrets.SESSION_KEY }},SESSION_ENCRYPTION_KEY_BASE64_ENCODED=${{ secrets.SESSION_ENCRYPTION_KEY_BASE64_ENCODED }},DATASTORE_PROJECT_ID=${{ secrets.DATASTORE_PROJECT_ID }} \
            --allow-unauthenticated \
            --no-traffic
            yes | gcloud beta run services update-traffic ${{ secrets.SERVICE_NAME }} --to-latest --quiet
